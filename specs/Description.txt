Psuedo-Code:

game.done = false
until game.done {
	puts "Hello! Thanks for playing Mastermind! Will you be the: \n1.Code Breaker\n2.Code Maker "
	answer = gets.chomp

	if answer.to_i == "1"
		game = GameManager.new(:code_breaker) #tests done
	else
		puts "Not implemented yet"
	end

	game.set_board_answer(game.player[:code_maker].generate_code()) #tests done

	game.over = false
	until game.over {
		puts game.turn_announce #tests done

		game.take_turn() #tests done

		game.display() 

		game.over = game.check_over (Decided by either end of turns, or a matching code [4 Xs in last row's result]) #WIP
		game.victory = game.check_victory #WIP
	}
	puts game.victory ? "You win!" : "You Lose!"
	
	puts "Again!? (Anything for yes, N for No)"
	game.done if gets.chomp == "no"
}






























Usage Case for MasterMind
Playing against the machine


User opens the game. The game will prompt user whether they would like to be the codeBreaker, or the codeMaker. (The latter would play against an AI.).

codeBreaker: 
	Computer will randomly generate a code*. The user will be given a choice of 8 colors** to choose from
	to enter a 4 color length code. once the code has been entered, the computer will check against it's own code, and return 1 black peg for every color 
	in the appropriate slot, and 1 white peg for every color that matches but is not in the correct slot. That will be printed on screen, and the next 
	turn will begin, displaying the history***, and awaiting the next turn. if the player receives 4 black pegs (AKA they guess the exact code), the player
	wins, displaying the Victory text, and ending the game.	if the game reaches to 12 turns, the player loses the game, ending it. At the end of the game,
	user receives option to play again, return to main menu, or exit the game.
	
codeMaker: 
	Computer will ask the player to enter a 4 color code. Once player has entered the code, the AI will loop taking a turn, waiting 2 seconds, and repeating
	until the end of the game is reached. and display the game's History, and the player's code, if successful.
	
Potential Colors: 
	Black(BL)
	Green(G)
	Brown(BR)
	Orange(O)
	Magenta(M)
	White(W)
	Pink(P)
	Red(R)
	
Actors:
	Player
	Board
	Colors
	Pegs

Steps of excecution:
	1.)GameManager will ask AI to make code.
		1a.)If the code colors do not exist, or do not meet the format of input, will ask to retry.
	2.)GameManager will enter code into Board's Answer.
	3.)GameManager will print Turn # of max#
	4.)Player will input 4 color code.
		4a.)If player enters an incorrect code (Color that does not exist, or wrong input format)
			Player will be prompted to retry the code.
	5.)Player will see board history with newly input code printed in row along with codeMaker response.
	6.)will loop until player recieves 4 correct pegs, or reaches the number of failed turns required to fail.
	7.)announce win/loss and stats(time, and number of turns), and ask whether to play again?
	8.) Player will enter anything to replay, or N/No to exit to main menu.